apiVersion: apps/v1
kind: Deployment
metadata:
  name: reports-service
  namespace: tombo
  labels:
    app.kubernetes.io/name: reports-service
    app.kubernetes.io/component: microservice
    app.kubernetes.io/part-of: tombo
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: reports-service
  template:
    metadata:
      annotations:
        app.kubernetes.io/name: reports-service
        app.kubernetes.io/component: microservice
        app.kubernetes.io/part-of: tombo
    spec:
      containers:
      - name: reports-server
        image: ${REPORTS_CONTAINER}
        env:
        - name: PORT
          value: '6969'
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: reports-secrets
              key: DATABASE_URL
        ports:
        - containerPort: 6969
        # TODO: resources
      # TODO: volumes

---

apiVersion: v1
kind: Service
metadata:
  name: reports-service
  namespace: tombo
  labels:
    app.kubernetes.io/name: reports-service
    app.kubernetes.io/component: microservice
    app.kubernetes.io/part-of: tombo
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: reports-service
  ports:
  - port: 6969
    targetPort: 6969

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: reports-ingress
  namespace: tombo
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "32m"
spec:
  rules:
  - host: reports.tombo.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: reports-service
            port:
              number: 80
