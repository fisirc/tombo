apiVersion: apps/v1
kind: Deployment
metadata:
  name: reports-service
  namespace: tombo
  labels:
    app.kubernetes.io/name: reports-service
    app.kubernetes.io/component: microservice
    app.kubernetes.io/part-of: tombo
spec:
  replicas: 3
  strategy:
    rollingUpdate:
      maxUnavailable: 100%
  selector:
    matchLabels:
      app.kubernetes.io/name: reports-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reports-service
        app.kubernetes.io/component: microservice
        app.kubernetes.io/part-of: tombo
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions: [{key: app.kubernetes.io/name, operator: In, values: [reports-service]}]
              topologyKey: kubernetes.io/hostname
      containers:
      - name: reports-server
        image: ${REPORTS_CONTAINER}
        env:
        - name: PORT
          value: '6969'
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: reports-secrets
              key: DATABASE_URL
        ports:
        - containerPort: 6969
        # TODO: resources
      # TODO: volumes

---

apiVersion: v1
kind: Service
metadata:
  name: reports-service
  namespace: tombo
  labels:
    app.kubernetes.io/name: reports-service
    app.kubernetes.io/component: microservice
    app.kubernetes.io/part-of: tombo
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: reports-service
  ports:
  - port: 80
    targetPort: 6969

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: reports-ingress
  namespace: tombo
  annotations:
    # See <https://cert-manager.io/docs/usage/ingress/#supported-annotations>
    nginx.ingress.kubernetes.io/proxy-body-size: "32m"
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    app.kubernetes.io/name: reports-service
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: tombo
spec:
  ingressClassName: "nginx"
  tls:
    - hosts:
        - reports.${BASE_DOMAIN}
      secretName: tombo-reports-tls
  rules:
  - host: reports.${BASE_DOMAIN}
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: reports-service
            port:
              number: 80
