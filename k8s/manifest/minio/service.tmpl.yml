apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: tombo
  labels:
    app.kubernetes.io/name: minio-pvc
    app.kubernetes.io/component: minio
    app.kubernetes.io/part-of: tombo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: tombo
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: minio
    app.kubernetes.io/part-of: tombo
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/component: minio
        app.kubernetes.io/part-of: tombo
    spec:
      volumes:
      - name: minio-data
        persistentVolumeClaim:
          claimName: minio-pvc
      containers:
      - name: minio
        # https://hub.docker.com/r/minio/minio
        image: minio/minio:RELEASE.2025-02-07T23-21-09Z
        args: ["server", "/data", "--console-address", ":9001"]
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secrets
              key: MINIO_ACCESS_KEY
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secrets
              key: MINIO_SECRET_KEY
        ports:
        - containerPort: 9000
        - containerPort: 9001
        volumeMounts:
        - name: minio-data
          mountPath: /data

---

# This Service will expose the Minio server on a ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: tombo
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: minio
    app.kubernetes.io/part-of: tombo
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: minio
  ports:
  - port: 9000
    targetPort: 9000
    protocol: TCP

---

# And this Service will expose the Minio Dashboard
apiVersion: v1
kind: Service
metadata:
  name: minio-console
  namespace: tombo
  labels:
    app.kubernetes.io/name: minio-console
    app.kubernetes.io/component: minio
    app.kubernetes.io/part-of: tombo
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: minio
  ports:
  - port: 80
    targetPort: 9001
    protocol: TCP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ingress
  namespace: tombo
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "64m"
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: minio
    app.kubernetes.io/part-of: tombo
spec:
  ingressClassName: "nginx"
  tls:
    - hosts:
        - console.minio.${BASE_DOMAIN}
      secretName: tombo-minio-tls
  rules:
  - host: console.minio.${BASE_DOMAIN}
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: minio-console
            port:
              number: 80
